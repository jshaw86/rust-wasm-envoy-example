apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
  name: my-envoy-filter
spec:
  workloadSelector:
    labels:
      app: details 
  configPatches:
  - applyTo: HTTP_FILTER
    match:
      context: SIDECAR_INBOUND
      listener:
        filterChain:
          filter:
            name: envoy.filters.network.http_connection_manager
            subFilter:
              name: envoy.filters.http.router
    patch:
      operation: INSERT_BEFORE
      value:
        name: myapp-filter-in
        config_discovery:
          config_source:
            ads: {}
            initial_fetch_timeout: 0s
          type_urls: [ "type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm"]
  - applyTo: EXTENSION_CONFIG
    match:
      context: SIDECAR_INBOUND
    patch:
      operation: INSERT_BEFORE
      value:
        name: myapp-filter-in
        typed_config:
          '@type': type.googleapis.com/udpa.type.v1.TypedStruct
          type_url: type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm
          value:
            config:
              root_id: myapp-root-in
              vm_config:
                vm_id: myapp-vm-in
                runtime: envoy.wasm.runtime.v8
                configuration:
                  "@type": type.googleapis.com/google.protobuf.StringValue
                  value: |
                    { "direction": "in" }
                code:
                  local:
                    filename: /Users/jordan.shaw/Development/rust-wasm-envoy-example/target/wasm32-wasi/release/rust_wasm_envoy_example.wasm
